-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end
vim.g.colors_name = "xcodedarkhc2"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "ALEVirtualTextError", { link = "ErrorMsg" })
hi(0, "ALEVirtualTextWarning", { link = "WarningMsg" })
hi(0, "Boolean", { link = "Statement" })
hi(0, "BufferLineBackground", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineBuffer", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineBufferSelected", { bg = "#1f1f24", bold = true, fg = "#ffffff", italic = true })
hi(0, "BufferLineBufferVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineCloseButton", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineCloseButtonSelected", { bg = "#1f1f24", fg = "#ffffff" })
hi(0, "BufferLineCloseButtonVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineDiagnostic", { bg = "#17171b", fg = "#62666c" })
hi(0, "BufferLineDiagnosticSelected", { bg = "#1f1f24", bold = true, fg = "#bfbfbf", italic = true })
hi(0, "BufferLineDiagnosticVisible", { bg = "#1c1c21", fg = "#62666c" })
hi(0, "BufferLineDuplicate", { bg = "#17171b", fg = "#7c8289", italic = true })
hi(0, "BufferLineDuplicateSelected", { bg = "#1f1f24", fg = "#7c8289", italic = true })
hi(0, "BufferLineDuplicateVisible", { bg = "#1c1c21", fg = "#7c8289", italic = true })
hi(0, "BufferLineError", { bg = "#17171b", fg = "#838991", sp = "#ff0000" })
hi(0, "BufferLineErrorDiagnostic", { bg = "#17171b", fg = "#62666c", sp = "#bf0000" })
hi(0, "BufferLineErrorDiagnosticSelected", { bg = "#1f1f24", bold = true, fg = "#bf0000", italic = true, sp = "#bf0000" })
hi(0, "BufferLineErrorDiagnosticVisible", { bg = "#1c1c21", fg = "#62666c" })
hi(0, "BufferLineErrorSelected", { bg = "#1f1f24", bold = true, fg = "#ff0000", italic = true, sp = "#ff0000" })
hi(0, "BufferLineErrorVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineFill", { bg = "#111113", fg = "#838991" })
hi(0, "BufferLineGroupLabel", { bg = "#838991", fg = "#111113" })
hi(0, "BufferLineGroupSeparator", { bg = "#111113", fg = "#838991" })
hi(0, "BufferLineHint", { bg = "#17171b", fg = "#838991", sp = "#d3d3d3" })
hi(0, "BufferLineHintDiagnostic", { bg = "#17171b", fg = "#62666c", sp = "#9e9e9e" })
hi(0, "BufferLineHintDiagnosticSelected", { bg = "#1f1f24", bold = true, fg = "#9e9e9e", italic = true, sp = "#9e9e9e" })
hi(0, "BufferLineHintDiagnosticVisible", { bg = "#1c1c21", fg = "#62666c" })
hi(0, "BufferLineHintSelected", { bg = "#1f1f24", bold = true, fg = "#d3d3d3", italic = true, sp = "#d3d3d3" })
hi(0, "BufferLineHintVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineIndicatorSelected", { bg = "#1f1f24", fg = "#43454b" })
hi(0, "BufferLineIndicatorVisible", { bg = "#1c1c21", fg = "#1c1c21" })
hi(0, "BufferLineInfo", { bg = "#17171b", fg = "#838991", sp = "#add8e6" })
hi(0, "BufferLineInfoDiagnostic", { bg = "#17171b", fg = "#62666c", sp = "#81a2ac" })
hi(0, "BufferLineInfoDiagnosticSelected", { bg = "#1f1f24", bold = true, fg = "#81a2ac", italic = true, sp = "#81a2ac" })
hi(0, "BufferLineInfoDiagnosticVisible", { bg = "#1c1c21", fg = "#62666c" })
hi(0, "BufferLineInfoSelected", { bg = "#1f1f24", bold = true, fg = "#add8e6", italic = true, sp = "#add8e6" })
hi(0, "BufferLineInfoVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineModified", { bg = "#17171b", fg = "#ff8a7a" })
hi(0, "BufferLineModifiedSelected", { bg = "#1f1f24", fg = "#ff8a7a" })
hi(0, "BufferLineModifiedVisible", { bg = "#1c1c21", fg = "#ff8a7a" })
hi(0, "BufferLineNumbers", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineNumbersSelected", { bg = "#1f1f24", bold = true, fg = "#ffffff", italic = true })
hi(0, "BufferLineNumbersVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "BufferLineOffsetSeparator", { bg = "#111113", fg = "#34353b" })
hi(0, "BufferLinePick", { bg = "#17171b", bold = true, fg = "#ff0000", italic = true })
hi(0, "BufferLinePickSelected", { bg = "#1f1f24", bold = true, fg = "#ff0000", italic = true })
hi(0, "BufferLinePickVisible", { bg = "#1c1c21", bold = true, fg = "#ff0000", italic = true })
hi(0, "BufferLineSeparator", { bg = "#17171b", fg = "#111113" })
hi(0, "BufferLineSeparatorSelected", { bg = "#1f1f24", fg = "#111113" })
hi(0, "BufferLineSeparatorVisible", { bg = "#1c1c21", fg = "#111113" })
hi(0, "BufferLineTab", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineTabClose", { bg = "#17171b", fg = "#838991" })
hi(0, "BufferLineTabSelected", { bg = "#1f1f24", fg = "#43454b" })
hi(0, "BufferLineTabSeparator", { bg = "#17171b", fg = "#111113" })
hi(0, "BufferLineTabSeparatorSelected", { bg = "#1f1f24", fg = "#111113" })
hi(0, "BufferLineTruncMarker", { bg = "#111113", fg = "#838991" })
hi(0, "BufferLineWarning", { bg = "#17171b", fg = "#838991", sp = "#ffa500" })
hi(0, "BufferLineWarningDiagnostic", { bg = "#17171b", fg = "#62666c", sp = "#bf7b00" })
hi(0, "BufferLineWarningDiagnosticSelected",
  { bg = "#1f1f24", bold = true, fg = "#bf7b00", italic = true, sp = "#bf7b00" })
hi(0, "BufferLineWarningDiagnosticVisible", { bg = "#1c1c21", fg = "#62666c" })
hi(0, "BufferLineWarningSelected", { bg = "#1f1f24", bold = true, fg = "#ffa500", italic = true, sp = "#ffa500" })
hi(0, "BufferLineWarningVisible", { bg = "#1c1c21", fg = "#838991" })
hi(0, "Character", { fg = "#d9c668" })
hi(0, "CmpItemAbbrDefault", { fg = "#ffffff" })
hi(0, "CmpItemAbbrDeprecatedDefault", { fg = "#838991" })
hi(0, "CmpItemAbbrMatchDefault", { fg = "#ffffff" })
hi(0, "CmpItemAbbrMatchFuzzyDefault", { fg = "#ffffff" })
hi(0, "CmpItemKindClassDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindColorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstantDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstructorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindDefault", { fg = "#83c9bc" })
hi(0, "CmpItemKindEnumDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEnumMemberDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEventDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFieldDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFileDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFolderDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFunctionDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindInterfaceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindKeywordDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindMethodDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindModuleDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindOperatorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindPropertyDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindReferenceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindSnippetDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindStructDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTextDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTypeParameterDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindUnitDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindValueDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindVariableDefault", { link = "CmpItemKind" })
hi(0, "CmpItemMenuDefault", { fg = "#ffffff" })
hi(0, "ColorColumn", { bg = "#26262b", ctermbg = 1 })
hi(0, "Comment", { ctermfg = 14, fg = "#838991" })
hi(0, "Conceal", { ctermfg = 0, fg = "#52555c" })
hi(0, "Constant", { fg = "#cda1ff" })
hi(0, "Cursor", { bg = "#ffffff", fg = "#1f1f24" })
hi(0, "CursorColumn", { bg = "#26262b", ctermbg = 242 })
hi(0, "CursorLine", { bg = "#26262b" })
hi(0, "CursorLineNr", { bg = "#26262b", ctermfg = 11, fg = "#ffffff" })
hi(0, "DapUIBreakpointsCurrentLine", { bold = true, fg = "#a9ff68" })
hi(0, "DapUIBreakpointsDisabledLine", { fg = "#424242" })
hi(0, "DapUIBreakpointsInfo", { fg = "#a9ff68" })
hi(0, "DapUIBreakpointsPath", { fg = "#00f1f5" })
hi(0, "DapUIDecoration", { fg = "#00f1f5" })
hi(0, "DapUIFloatBorder", { fg = "#00f1f5" })
hi(0, "DapUILineNumber", { fg = "#00f1f5" })
hi(0, "DapUIModifiedValue", { bold = true, fg = "#00f1f5" })
hi(0, "DapUINormalNC", { bg = "#1f1f24", fg = "#ffffff" })
hi(0, "DapUIPlayPause", { fg = "#a9ff68" })
hi(0, "DapUIPlayPauseNC", { fg = "#a9ff68" })
hi(0, "DapUIRestart", { fg = "#a9ff68" })
hi(0, "DapUIRestartNC", { fg = "#a9ff68" })
hi(0, "DapUIScope", { fg = "#00f1f5" })
hi(0, "DapUISource", { fg = "#d484ff" })
hi(0, "DapUIStepBack", { fg = "#00f1f5" })
hi(0, "DapUIStepBackNC", { fg = "#00f1f5" })
hi(0, "DapUIStepInto", { fg = "#00f1f5" })
hi(0, "DapUIStepIntoNC", { fg = "#00f1f5" })
hi(0, "DapUIStepOut", { fg = "#00f1f5" })
hi(0, "DapUIStepOutNC", { fg = "#00f1f5" })
hi(0, "DapUIStepOver", { fg = "#00f1f5" })
hi(0, "DapUIStepOverNC", { fg = "#00f1f5" })
hi(0, "DapUIStop", { fg = "#f70067" })
hi(0, "DapUIStopNC", { fg = "#f70067" })
hi(0, "DapUIStoppedThread", { fg = "#00f1f5" })
hi(0, "DapUIThread", { fg = "#a9ff68" })
hi(0, "DapUIType", { fg = "#d484ff" })
hi(0, "DapUIUnavailable", { fg = "#424242" })
hi(0, "DapUIUnavailableNC", { fg = "#424242" })
hi(0, "DapUIWatchesEmpty", { fg = "#f70067" })
hi(0, "DapUIWatchesError", { fg = "#f70067" })
hi(0, "DapUIWatchesValue", { fg = "#a9ff68" })
hi(0, "DapUIWinSelect", { bold = true, ctermfg = 14, fg = "#00f1f5" })
hi(0, "Delimiter", { fg = "#aeb7c0" })
hi(0, "DiffAdd", { bg = "#1e2a28", ctermbg = 4, fg = "#b1faeb" })
hi(0, "DiffChange", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffDelete", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffFile", { link = "Directory" })
hi(0, "DiffText", { bg = "#2e2622", ctermbg = 9, fg = "#ffa14f" })
hi(0, "DiffviewCursorLine", { bg = "#26262b" })
hi(0, "DiffviewDiffAdd", { bg = "#1e2a28", ctermbg = 4, fg = "#b1faeb" })
hi(0, "DiffviewDiffAddAsDelete", { bg = "#2f2625", fg = "#ff8a7a" })
hi(0, "DiffviewDiffChange", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewDiffDelete", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffviewDiffDeleteDim", { ctermfg = 14, fg = "#838991" })
hi(0, "DiffviewDiffText", { bg = "#2e2622", ctermbg = 9, fg = "#ffa14f" })
hi(0, "DiffviewDim1", { fg = "#838991" })
hi(0, "DiffviewEndOfBuffer", { bg = "#1f1f24", fg = "#1f1f24" })
hi(0, "DiffviewFilePanelConflicts", { ctermfg = 3, fg = "#ffa500" })
hi(0, "DiffviewFilePanelCounter", { bold = true, fg = "#83c9bc" })
hi(0, "DiffviewFilePanelDeletions", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffviewFilePanelFileName", { fg = "#ffffff" })
hi(0, "DiffviewFilePanelInsertions", { bg = "#1e2a28", ctermbg = 4, fg = "#b1faeb" })
hi(0, "DiffviewFilePanelPath", { ctermfg = 14, fg = "#838991" })
hi(0, "DiffviewFilePanelRootPath", { bold = true, fg = "#ff85b8" })
hi(0, "DiffviewFilePanelSelected", { fg = "#e5cfff" })
hi(0, "DiffviewFilePanelTitle", { bold = true, fg = "#ff85b8" })
hi(0, "DiffviewFolderName", { ctermfg = 159, fg = "#6bdfff" })
hi(0, "DiffviewFolderSign", { ctermfg = 81, fg = "#ffa14f" })
hi(0, "DiffviewNonText", { ctermfg = 0, fg = "#52555c" })
hi(0, "DiffviewNormal", { bg = "#1f1f24", fg = "#ffffff" })
hi(0, "DiffviewPrimary", { fg = "#cda1ff" })
hi(0, "DiffviewReference", { fg = "#cda1ff" })
hi(0, "DiffviewSecondary", { fg = "#ff8a7a" })
hi(0, "DiffviewSignColumn", { bg = "#1f1f24", fg = "#ffffff" })
hi(0, "DiffviewStatusAdded", { bg = "#1e2a28", ctermbg = 4, fg = "#b1faeb" })
hi(0, "DiffviewStatusBroken", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffviewStatusCopied", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewStatusDeleted", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffviewStatusIgnored", { ctermfg = 14, fg = "#838991" })
hi(0, "DiffviewStatusLine", { bg = "#43454b", fg = "#ffffff" })
hi(0, "DiffviewStatusLineNC", { bg = "#34353b", fg = "#838991" })
hi(0, "DiffviewStatusModified", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewStatusRenamed", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewStatusTypeChange", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewStatusUnknown", { bg = "#2f2625", ctermbg = 6, ctermfg = 12, fg = "#ff8a7a" })
hi(0, "DiffviewStatusUnmerged", { ctermbg = 5, fg = "#ffa14f" })
hi(0, "DiffviewStatusUntracked", { bg = "#1e2a28", ctermbg = 4, fg = "#b1faeb" })
hi(0, "DiffviewWinSeparator", { bg = "#34353b", fg = "#34353b" })
hi(0, "Directory", { ctermfg = 159, fg = "#6bdfff" })
hi(0, "Empty", { fg = "#ffffff" })
hi(0, "EndOfBuffer", { bg = "#1f1f24", fg = "#1f1f24" })
hi(0, "Error", { bg = "#ff8a7a", ctermbg = 9, ctermfg = 15, fg = "#1f1f24" })
hi(0, "ErrorMsg", { ctermbg = 1, ctermfg = 15, fg = "#ff8a7a" })
hi(0, "FoldColumn", { ctermbg = 242, ctermfg = 14, fg = "#52555c" })
hi(0, "Folded", { bg = "#34353b", ctermbg = 242, ctermfg = 14, fg = "#52555c" })
hi(0, "Function", { link = "LibraryFunc" })
hi(0, "FunctionDef", { fg = "#4ec4e6" })
hi(0, "Identifier", { fg = "#ffffff" })
hi(0, "IdentifierDef", { fg = "#ffffff" })
hi(0, "Ignore", { ctermfg = 0, fg = "#52555c" })
hi(0, "IncSearch", { bg = "#fef937", fg = "#1f1f24" })
hi(0, "Include", { link = "Statement" })
hi(0, "LibraryFunc", { fg = "#cda1ff" })
hi(0, "LibraryIdent", { fg = "#cda1ff" })
hi(0, "LibraryType", { fg = "#e5cfff" })
hi(0, "LineNr", { ctermfg = 11, fg = "#52555c" })
hi(0, "LocalFunc", { fg = "#83c9bc" })
hi(0, "LocalIdent", { fg = "#83c9bc" })
hi(0, "LocalType", { fg = "#b1faeb" })
hi(0, "MatchParen", { bg = "#0f5bca", ctermbg = 6, fg = "#ffffff" })
hi(0, "MatchWord", { bg = "#0f5bca", fg = "#ffffff" })
hi(0, "MiniCursorword", { underline = true })
hi(0, "MiniCursorwordCurrent", { underline = true })
hi(0, "ModeMsg", { fg = "#838991" })
hi(0, "MoreMsg", { ctermfg = 121, fg = "#ff85b8" })
hi(0, "MsgArea", { link = "Title" })
hi(0, "NeoTreeDimText", { fg = "#505050" })
hi(0, "NeoTreeDotfile", { fg = "#626262" })
hi(0, "NeoTreeFadeText1", { fg = "#626262" })
hi(0, "NeoTreeFadeText2", { fg = "#444444" })
hi(0, "NeoTreeFileNameOpened", { bold = true })
hi(0, "NeoTreeFloatTitle", { bg = "#34353b", fg = "#ffffff" })
hi(0, "NeoTreeGitAdded", { fg = "#5faf5f" })
hi(0, "NeoTreeGitConflict", { bold = true, fg = "#ff8700", italic = true })
hi(0, "NeoTreeGitDeleted", { fg = "#ff5900" })
hi(0, "NeoTreeGitModified", { fg = "#d7af5f" })
hi(0, "NeoTreeGitUntracked", { fg = "#ff8700", italic = true })
hi(0, "NeoTreeMessage", { fg = "#505050", italic = true })
hi(0, "NeoTreeModified", { fg = "#d7d787" })
hi(0, "NeoTreeRootName", { bold = true, italic = true })
hi(0, "NeoTreeTabActive", { bold = true })
hi(0, "NeoTreeTabInactive", { bg = "#141414", fg = "#777777" })
hi(0, "NeoTreeTabSeparatorActive", { fg = "#0a0a0a" })
hi(0, "NeoTreeTabSeparatorInactive", { bg = "#141414", fg = "#101010" })
hi(0, "NeoTreeTitleBar", { bg = "#34353b", fg = "#1f1f24" })
hi(0, "NeogitBranch", { bold = true, fg = "#ffcb6b" })
hi(0, "NeogitChangeAdded", { bold = true, fg = "#d17164", italic = true })
hi(0, "NeogitChangeBothModified", { bold = true, fg = "#d48642", italic = true })
hi(0, "NeogitChangeCopied", { bold = true, fg = "#8f969d", italic = true })
hi(0, "NeogitChangeDeleted", { bold = true, fg = "#19191e", italic = true })
hi(0, "NeogitChangeModified", { bold = true, fg = "#6b8bd1", italic = true })
hi(0, "NeogitChangeNewFile", { bold = true, fg = "#d17164", italic = true })
hi(0, "NeogitChangeRenamed", { bold = true, fg = "#a378c0", italic = true })
hi(0, "NeogitChangeUpdated", { bold = true, fg = "#d4a859", italic = true })
hi(0, "NeogitCommitViewHeader", { bg = "#8f969d", fg = "#1f1f24" })
hi(0, "NeogitCursorLine", { bg = "#232328" })
hi(0, "NeogitDiffAdd", { bg = "#1e2a28", fg = "#d17164" })
hi(0, "NeogitDiffAddHighlight", { bg = "#1e2a28", fg = "#ff8a7a" })
hi(0, "NeogitDiffContext", { bg = "#232328" })
hi(0, "NeogitDiffContextHighlight", { bg = "#2e2e32" })
hi(0, "NeogitDiffDelete", { bg = "#2f2625", fg = "#19191e" })
hi(0, "NeogitDiffDeleteHighlight", { bg = "#2f2625", fg = "#1f1f24" })
hi(0, "NeogitDiffHeader", { bg = "#38383c", bold = true, fg = "#82aaff" })
hi(0, "NeogitDiffHeaderHighlight", { bg = "#38383c", bold = true, fg = "#ffcb6b" })
hi(0, "NeogitFilePath", { fg = "#82aaff", italic = true })
hi(0, "NeogitGraphBlue", { fg = "#82aaff" })
hi(0, "NeogitGraphBoldBlue", { bold = true, fg = "#82aaff" })
hi(0, "NeogitGraphBoldCyan", { bold = true, fg = "#aeb7c0" })
hi(0, "NeogitGraphBoldGray", { bold = true, fg = "#79797c" })
hi(0, "NeogitGraphBoldGreen", { bold = true, fg = "#ff8a7a" })
hi(0, "NeogitGraphBoldOrange", { bold = true, fg = "#ffcb6b" })
hi(0, "NeogitGraphBoldPurple", { bold = true, fg = "#c792ea" })
hi(0, "NeogitGraphBoldRed", { bold = true, fg = "#1f1f24" })
hi(0, "NeogitGraphBoldWhite", { bold = true })
hi(0, "NeogitGraphBoldYellow", { bold = true, fg = "#ffa14f" })
hi(0, "NeogitGraphCyan", { fg = "#aeb7c0" })
hi(0, "NeogitGraphGray", { fg = "#79797c" })
hi(0, "NeogitGraphGreen", { fg = "#ff8a7a" })
hi(0, "NeogitGraphOrange", { fg = "#ffcb6b" })
hi(0, "NeogitGraphPurple", { fg = "#c792ea" })
hi(0, "NeogitGraphRed", { fg = "#1f1f24" })
hi(0, "NeogitGraphYellow", { fg = "#ffa14f" })
hi(0, "NeogitHunkHeader", { bg = "#79797c", bold = true, fg = "#1f1f24" })
hi(0, "NeogitHunkHeaderHighlight", { bg = "#d1a6ee", bold = true, fg = "#1f1f24" })
hi(0, "NeogitPopupActionKey", { fg = "#c792ea" })
hi(0, "NeogitPopupBold", { bold = true })
hi(0, "NeogitPopupConfigKey", { fg = "#c792ea" })
hi(0, "NeogitPopupOptionKey", { fg = "#c792ea" })
hi(0, "NeogitPopupSwitchKey", { fg = "#c792ea" })
hi(0, "NeogitRebasing", { bold = true, fg = "#a378c0" })
hi(0, "NeogitRecentcommits", { bold = true, fg = "#a378c0" })
hi(0, "NeogitRemote", { bold = true, fg = "#ff8a7a" })
hi(0, "NeogitStagedchanges", { bold = true, fg = "#a378c0" })
hi(0, "NeogitStashes", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnmergedInto", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnmergedchanges", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnpulledFrom", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnpulledchanges", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnpushedTo", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUnstagedchanges", { bold = true, fg = "#a378c0" })
hi(0, "NeogitUntrackedfiles", { bold = true, fg = "#a378c0" })
hi(0, "NeoscrollHiddenCursor", { blend = 100, reverse = true })
hi(0, "Noise", { link = "Delimiter" })
hi(0, "NonText", { ctermfg = 0, fg = "#52555c" })
hi(0, "Normal", { bg = "#1f1f24", fg = "#ffffff" })
hi(0, "NotifyDEBUGBorder", { fg = "#8b8b8b" })
hi(0, "NotifyDEBUGIcon", { fg = "#8b8b8b" })
hi(0, "NotifyDEBUGTitle", { fg = "#8b8b8b" })
hi(0, "NotifyERRORBorder", { fg = "#8a1f1f" })
hi(0, "NotifyERRORIcon", { fg = "#f70067" })
hi(0, "NotifyERRORTitle", { fg = "#f70067" })
hi(0, "NotifyINFOBorder", { fg = "#4f6752" })
hi(0, "NotifyINFOIcon", { fg = "#a9ff68" })
hi(0, "NotifyINFOTitle", { fg = "#a9ff68" })
hi(0, "NotifyTRACEBorder", { fg = "#4f3552" })
hi(0, "NotifyTRACEIcon", { fg = "#d484ff" })
hi(0, "NotifyTRACETitle", { fg = "#d484ff" })
hi(0, "NotifyWARNBorder", { fg = "#79491d" })
hi(0, "NotifyWARNIcon", { fg = "#f79000" })
hi(0, "NotifyWARNTitle", { fg = "#f79000" })
hi(0, "Number", { fg = "#d9c668" })
hi(0, "Operator", { fg = "#aeb7c0" })
hi(0, "Pmenu", { bg = "#34353b", ctermbg = 13, ctermfg = 0, fg = "#ffffff" })
hi(0, "PmenuSbar", { bg = "#34353b", ctermbg = 248, fg = "#34353b" })
hi(0, "PmenuSel", { bg = "#0f5bca", ctermbg = 0, ctermfg = 242, fg = "#ffffff" })
hi(0, "PmenuThumb", { bg = "#43454b", ctermbg = 15, fg = "#43454b" })
hi(0, "PreProc", { ctermfg = 81, fg = "#ffa14f" })
hi(0, "Question", { ctermfg = 121, fg = "#ff85b8" })
hi(0, "QuickFixLine", { bg = "#0f5bca", fg = "#ffffff" })
hi(0, "Quote", { link = "StringDelimiter" })
hi(0, "Search", { bg = "#43454b", ctermbg = 11, ctermfg = 0, fg = "#ffffff" })
hi(0, "Searchlight", { link = "IncSearch" })
hi(0, "SignColumn", { ctermbg = 242, ctermfg = 14, fg = "#52555c" })
hi(0, "Signify", { fg = "#4484d1" })
hi(0, "SignifySignAdd", { link = "Signify" })
hi(0, "SignifySignChange", { link = "Signify" })
hi(0, "SignifySignDelete", { link = "Signify" })
hi(0, "Special", { ctermfg = 224, fg = "#83c9bc" })
hi(0, "SpecialComment", { fg = "#aeb7c0" })
hi(0, "SpecialKey", { ctermfg = 0, fg = "#52555c" })
hi(0, "SpellBad", { sp = "#ff0000", undercurl = true })
hi(0, "SpellCap", { sp = "#0000ff", undercurl = true })
hi(0, "SpellLocal", { sp = "#00ffff", undercurl = true })
hi(0, "SpellRare", { sp = "#ff00ff", undercurl = true })
hi(0, "Statement", { bold = true, ctermfg = 11, fg = "#ff85b8" })
hi(0, "StatusLine", { bg = "#43454b", fg = "#ffffff" })
hi(0, "StatusLineNC", { bg = "#34353b", fg = "#838991" })
hi(0, "StatusLineTerm", { link = "StatusLine" })
hi(0, "StatusLineTermNC", { link = "StatusLineNC" })
hi(0, "StorageClass", { link = "Statement" })
hi(0, "String", { fg = "#ff8a7a" })
hi(0, "StringDelimiter", { link = "String" })
hi(0, "Structure", { link = "Statement" })
hi(0, "TabLine", { bg = "#34353b", fg = "#838991" })
hi(0, "TabLineFill", { bg = "#34353b", fg = "#838991" })
hi(0, "TabLineSel", { bg = "#43454b", fg = "#ffffff" })
hi(0, "TelescopeMatching", { bold = true, fg = "#2d8504" })
hi(0, "Terminal", { link = "Normal" })
hi(0, "Title", { bold = true, ctermfg = 225, fg = "#ffffff" })
hi(0, "Todo", { bold = true, ctermbg = 11, ctermfg = 0, fg = "#aeb7c0" })
hi(0, "Type", { fg = "#e5cfff" })
hi(0, "Typedef", { fg = "#6bdfff" })
hi(0, "Underlined", { ctermfg = 81, fg = "#6bdfff", underline = true })
hi(0, "VertSplit", { bg = "#34353b", fg = "#34353b" })
hi(0, "Visual", { bg = "#43454b", ctermbg = 242 })
hi(0, "VisualNOS", { link = "Visual" })
hi(0, "WarningMsg", { ctermfg = 224, fg = "#ffa14f" })
hi(0, "Whitespace", { link = "Ignore" })
hi(0, "WildMenu", { bg = "#0f5bca", ctermbg = 11, ctermfg = 0, fg = "#ffffff" })
hi(0, "WinBarActive", { bg = "#1f1f24", fg = "#6bdfff", underline = true })
hi(0, "WinBarInactive", { bg = "#1f1f24", fg = "#838991" })
hi(0, "bibEntryKw", { link = "LibraryIdent" })
hi(0, "bibKey", { link = "IdentifierDef" })
hi(0, "bibType", { link = "LibraryType" })
hi(0, "cssAtRule", { link = "Keyword" })
hi(0, "cssAttr", { link = "Keyword" })
hi(0, "cssBraces", { link = "cssNoise" })
hi(0, "cssClassName", { link = "LocalIdent" })
hi(0, "cssColor", { link = "cssAttr" })
hi(0, "cssFunction", { link = "Empty" })
hi(0, "cssIdentifier", { link = "LocalIdent" })
hi(0, "cssProp", { link = "LibraryType" })
hi(0, "cssPseudoClassId", { link = "LibraryIdent" })
hi(0, "cssSelectorOp", { link = "Operator" })
hi(0, "diffAdded", { link = "DiffAdd" })
hi(0, "diffBDiffer", { link = "WarningMsg" })
hi(0, "diffChanged", { link = "DiffChange" })
hi(0, "diffCommon", { link = "WarningMsg" })
hi(0, "diffDiffer", { link = "WarningMsg" })
hi(0, "diffIdentical", { link = "WarningMsg" })
hi(0, "diffIndexLine", { link = "Number" })
hi(0, "diffIsA", { link = "WarningMsg" })
hi(0, "diffNoEOL", { link = "WarningMsg" })
hi(0, "diffOnly", { link = "WarningMsg" })
hi(0, "diffRemoved", { link = "DiffDelete" })
hi(0, "gitcommitHeader", { link = "Todo" })
hi(0, "gitcommitOverflow", { link = "Error" })
hi(0, "gitcommitSummary", { link = "Title" })
hi(0, "goField", { link = "LocalIdent" })
hi(0, "goFunction", { link = "FunctionDef" })
hi(0, "goFunctionCall", { link = "LibraryFunc" })
hi(0, "goVarAssign", { link = "LocalIdent" })
hi(0, "goVarDefs", { link = "IdentifierDef" })
hi(0, "helpCommand", { link = "helpExample" })
hi(0, "helpExample", { link = "markdownCode" })
hi(0, "helpHeadline", { link = "Title" })
hi(0, "helpHyperTextEntry", { link = "Comment" })
hi(0, "helpHyperTextJump", { link = "Underlined" })
hi(0, "helpSectionDelim", { link = "Ignore" })
hi(0, "helpURL", { link = "helpHyperTextJump" })
hi(0, "helpVim", { link = "Title" })
hi(0, "htmlArg", { link = "Special" })
hi(0, "htmlEndTag", { link = "Delimiter" })
hi(0, "htmlLink", { link = "Underlined" })
hi(0, "htmlSpecialTagName", { link = "htmlTagName" })
hi(0, "htmlTag", { link = "Delimiter" })
hi(0, "htmlTagName", { link = "Statement" })
hi(0, "jinjaBlockName", { link = "Typedef" })
hi(0, "jinjaFilter", { link = "LibraryFunc" })
hi(0, "jinjaNumber", { link = "Number" })
hi(0, "jinjaOperator", { link = "Operator" })
hi(0, "jinjaRawDelim", { link = "PreProc" })
hi(0, "jinjaSpecial", { link = "Keyword" })
hi(0, "jinjaString", { link = "String" })
hi(0, "jinjaTagDelim", { link = "Delimiter" })
hi(0, "jinjaVarDelim", { link = "Delimiter" })
hi(0, "jsBuiltins", { link = "LibraryFunc" })
hi(0, "jsClassDefinition", { link = "Typedef" })
hi(0, "jsDomErrNo", { link = "LibraryIdent" })
hi(0, "jsDomNodeConsts", { link = "LibraryIdent" })
hi(0, "jsExceptions", { link = "LibraryType" })
hi(0, "jsFuncArgCommas", { link = "jsNoise" })
hi(0, "jsFuncName", { link = "FunctionDef" })
hi(0, "jsFunction", { link = "jsStatement" })
hi(0, "jsGlobalNodeObjects", { link = "jsGlobalObjects" })
hi(0, "jsGlobalObjects", { link = "LibraryType" })
hi(0, "jsObjectProp", { link = "LocalIdent" })
hi(0, "jsOperatorKeyword", { link = "jsStatement" })
hi(0, "jsThis", { link = "jsStatement" })
hi(0, "jsVariableDef", { link = "IdentifierDef" })
hi(0, "jsonKeyword", { link = "jsonString" })
hi(0, "jsonKeywordMatch", { link = "Operator" })
hi(0, "jsonQuote", { link = "StringDelimiter" })
hi(0, "lCursor", { bg = "#ffffff", fg = "#1f1f24" })
hi(0, "lspdiagnosticsfloatingerror", { link = "ErrorMsg" })
hi(0, "lspdiagnosticsfloatinghint", { link = "MoreMsg" })
hi(0, "lspdiagnosticsfloatinginformation", { link = "ModeMsg" })
hi(0, "lspdiagnosticsfloatingwarning", { link = "WarningMsg" })
hi(0, "lspdiagnosticssignerror", { link = "ErrorMsg" })
hi(0, "lspdiagnosticssignhint", { link = "MoreMsg" })
hi(0, "lspdiagnosticssigninformation", { link = "ModeMsg" })
hi(0, "lspdiagnosticssignwarning", { link = "WarningMsg" })
hi(0, "lspdiagnosticsunderlineerror", { fg = "#d12f1b", undercurl = true })
hi(0, "lspdiagnosticsunderlineinformation", { fg = "#ad3da4", undercurl = true })
hi(0, "lspdiagnosticsunderlinewarning", { fg = "#78492a", undercurl = true })
hi(0, "lspdiagnosticsvirtualtexterror", { link = "ErrorMsg" })
hi(0, "lspdiagnosticsvirtualtexthint", { link = "MoreMsg" })
hi(0, "lspdiagnosticsvirtualtextwarning", { link = "WarningMsg" })
hi(0, "luaTSVariable", { link = "Normal" })
hi(0, "markdownBoldDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownBoldItalicDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownCode", { bg = "#34353b", fg = "#e5cfff" })
hi(0, "markdownCodeBlock", { link = "markdownCode" })
hi(0, "markdownCodeDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownDelimiter", { fg = "#83c9bc" })
hi(0, "markdownHeadingDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownItalicDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownLinkDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownLinkText", { link = "Empty" })
hi(0, "markdownLinkTextDelimiter", { link = "markdownDelimiter" })
hi(0, "markdownListMarker", { link = "markdownDelimiter" })
hi(0, "markdownRule", { link = "markdownDelimiter" })
hi(0, "markdownUrl", { link = "Underlined" })
hi(0, "rainbowcol1", { ctermfg = 9, fg = "#cc241d" })
hi(0, "rainbowcol2", { ctermfg = 10, fg = "#a89984" })
hi(0, "rainbowcol3", { ctermfg = 11, fg = "#b16286" })
hi(0, "rainbowcol4", { ctermfg = 12, fg = "#d79921" })
hi(0, "rainbowcol5", { ctermfg = 13, fg = "#689d6a" })
hi(0, "rainbowcol6", { ctermfg = 14, fg = "#d65d0e" })
hi(0, "rainbowcol7", { ctermfg = 15, fg = "#458588" })
hi(0, "rsForeignConst", { link = "LibraryIdent" })
hi(0, "rsForeignFunc", { link = "LibraryFunc" })
hi(0, "rsForeignType", { link = "LibraryType" })
hi(0, "rsFuncDef", { link = "FunctionDef" })
hi(0, "rsIdentDef", { link = "IdentifierDef" })
hi(0, "rsLibraryConst", { link = "LibraryIdent" })
hi(0, "rsLibraryFunc", { link = "LibraryFunc" })
hi(0, "rsLibraryType", { link = "LibraryType" })
hi(0, "rsLifetimeDef", { link = "IdentifierDef" })
hi(0, "rsSpecialLifetime", { link = "LibraryIdent" })
hi(0, "rsUserConst", { link = "LocalIdent" })
hi(0, "rsUserFunc", { link = "LocalFunc" })
hi(0, "rsUserLifetime", { link = "LocalIdent" })
hi(0, "rsUserMethod", { link = "LibraryFunc" })
hi(0, "rsUserType", { link = "LocalType" })
hi(0, "scssAttribute", { link = "cssNoise" })
hi(0, "scssInclude", { link = "Keyword" })
hi(0, "scssMixin", { link = "Keyword" })
hi(0, "scssMixinName", { link = "LocalFunc" })
hi(0, "scssMixinParams", { link = "cssNoise" })
hi(0, "scssSelectorName", { link = "cssClassName" })
hi(0, "scssVariableAssignment", { link = "Operator" })
hi(0, "scssVariableValue", { link = "Operator" })
hi(0, "swiftFuncDef", { link = "FunctionDef" })
hi(0, "swiftIdentDef", { link = "IdentifierDef" })
hi(0, "swiftLibraryFunc", { link = "LibraryFunc" })
hi(0, "swiftLibraryProp", { link = "LibraryIdent" })
hi(0, "swiftLibraryType", { link = "LibraryType" })
hi(0, "swiftUserFunc", { link = "LocalFunc" })
hi(0, "swiftUserProp", { link = "LocalIdent" })
hi(0, "swiftUserType", { link = "LocalType" })
hi(0, "tsannotation", { fg = "#b4d8fd" })
hi(0, "tsboolean", { link = "Boolean" })
hi(0, "tscharacter", { link = "Character" })
hi(0, "tscomment", { link = "Comment" })
hi(0, "tsconditional", { link = "Conditional" })
hi(0, "tsconstant", { link = "Constant" })
hi(0, "tsconstbuiltin", { link = "Constant" })
hi(0, "tsconstmacro", { link = "Macro" })
hi(0, "tsconstructor", { link = "Type" })
hi(0, "tsemphasis", { link = "Underlined" })
hi(0, "tserror", { bg = "#ffffff", bold = true, fg = "#262626" })
hi(0, "tsexception", { link = "Conditional" })
hi(0, "tsfield", { link = "Identifier" })
hi(0, "tsfloat", { link = "Float" })
hi(0, "tsfuncbuiltin", { link = "Function" })
hi(0, "tsfuncmacro", { link = "Function" })
hi(0, "tsfunction", { link = "Function" })
hi(0, "tsinclude", { link = "Include" })
hi(0, "tskeyword", { link = "Keyword" })
hi(0, "tskeywordfunction", { link = "Type" })
hi(0, "tslabel", { link = "Label" })
hi(0, "tsliteral", { link = "Character" })
hi(0, "tsmethod", { link = "Function" })
hi(0, "tsnamespace", { link = "Conditional" })
hi(0, "tsnumber", { link = "Number" })
hi(0, "tsoperator", { link = "Operator" })
hi(0, "tsparameter", { link = "Label" })
hi(0, "tsparameterreference", { link = "Constant" })
hi(0, "tsproperty", { link = "tsfield" })
hi(0, "tspunctbracket", { link = "Normal" })
hi(0, "tspunctdelimiter", { link = "Normal" })
hi(0, "tspunctspecial", { link = "Normal" })
hi(0, "tsrepeat", { link = "Conditional" })
hi(0, "tsstring", { link = "String" })
hi(0, "tsstringescape", { link = "Special" })
hi(0, "tsstringregex", { link = "Special" })
hi(0, "tsstrong", { link = "Normal" })
hi(0, "tstag", { link = "Label" })
hi(0, "tstagdelimiter", { link = "Label" })
hi(0, "tstitle", { link = "Special" })
hi(0, "tstype", { link = "Type" })
hi(0, "tstypebuiltin", { link = "Type" })
hi(0, "tsvariable", { link = "Identifier" })
hi(0, "tsvariablebuiltin", { link = "Conditional" })
hi(0, "typescriptArrayMethod", { link = "LibraryFunc" })
hi(0, "typescriptArrowFunc", { link = "Operator" })
hi(0, "typescriptAssign", { link = "Operator" })
hi(0, "typescriptBOM", { link = "LibraryType" })
hi(0, "typescriptBOMWindowCons", { link = "LibraryType" })
hi(0, "typescriptBOMWindowMethod", { link = "LibraryFunc" })
hi(0, "typescriptBOMWindowProp", { link = "LibraryType" })
hi(0, "typescriptBinaryOp", { link = "Operator" })
hi(0, "typescriptBraces", { link = "Delimiter" })
hi(0, "typescriptCall", { link = "Empty" })
hi(0, "typescriptClassHeritage", { link = "Type" })
hi(0, "typescriptClassName", { link = "Typedef" })
hi(0, "typescriptDOMDocMethod", { link = "LibraryFunc" })
hi(0, "typescriptDOMDocProp", { link = "LibraryIdent" })
hi(0, "typescriptDOMEventCons", { link = "LibraryType" })
hi(0, "typescriptDOMEventMethod", { link = "LibraryFunc" })
hi(0, "typescriptDOMEventProp", { link = "LibraryIdent" })
hi(0, "typescriptDOMEventTargetMethod", { link = "LibraryFunc" })
hi(0, "typescriptDOMNodeMethod", { link = "LibraryFunc" })
hi(0, "typescriptDOMStorageMethod", { link = "LibraryIdent" })
hi(0, "typescriptEndColons", { link = "Delimiter" })
hi(0, "typescriptExport", { link = "Keyword" })
hi(0, "typescriptFuncName", { link = "FunctionDef" })
hi(0, "typescriptFuncTypeArrow", { link = "typescriptArrowFunc" })
hi(0, "typescriptGlobal", { link = "typescriptPredefinedType" })
hi(0, "typescriptIdentifier", { link = "Keyword" })
hi(0, "typescriptInterfaceName", { link = "Typedef" })
hi(0, "typescriptMember", { link = "LocalFunc" })
hi(0, "typescriptObjectLabel", { link = "LocalIdent" })
hi(0, "typescriptOperator", { link = "Keyword" })
hi(0, "typescriptParens", { link = "Delimiter" })
hi(0, "typescriptPredefinedType", { link = "LibraryType" })
hi(0, "typescriptTypeAnnotation", { link = "Delimiter" })
hi(0, "typescriptTypeReference", { link = "typescriptUserDefinedType" })
hi(0, "typescriptUserDefinedType", { link = "LocalType" })
hi(0, "typescriptVariable", { link = "Keyword" })
hi(0, "typescriptVariableDeclaration", { link = "IdentifierDef" })
hi(0, "vimAutoCmdSfxList", { link = "LibraryType" })
hi(0, "vimAutoEventList", { link = "LocalIdent" })
hi(0, "vimCmdSep", { link = "Special" })
hi(0, "vimCommentTitle", { link = "SpecialComment" })
hi(0, "vimContinue", { link = "Delimiter" })
hi(0, "vimFuncName", { link = "LibraryFunc" })
hi(0, "vimFunction", { link = "FunctionDef" })
hi(0, "vimHighlight", { link = "Statement" })
hi(0, "vimMapModKey", { link = "vimNotation" })
hi(0, "vimNotation", { link = "LibraryType" })
hi(0, "vimOption", { link = "LibraryIdent" })
hi(0, "vimUserFunc", { link = "LocalFunc" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#43454b"
g.terminal_color_1 = "#ff8a7a"
g.terminal_color_2 = "#83c9bc"
g.terminal_color_3 = "#d9c668"
g.terminal_color_4 = "#4ec4e6"
g.terminal_color_5 = "#ff85b8"
g.terminal_color_6 = "#cda1ff"
g.terminal_color_7 = "#ffffff"
g.terminal_color_8 = "#838991"
g.terminal_color_9 = "#ff8a7a"
g.terminal_color_10 = "#b1faeb"
g.terminal_color_11 = "#ffa14f"
g.terminal_color_12 = "#6bdfff"
g.terminal_color_13 = "#ff85b8"
g.terminal_color_14 = "#e5cfff"
g.terminal_color_15 = "#ffffff"
